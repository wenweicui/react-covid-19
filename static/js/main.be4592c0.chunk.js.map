{"version":3,"sources":["components/Chart/Chart.module.css","components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Map/Map.jsx","utils/countries.js","components/CountryList/CountryList.jsx","App.js","index.js","components/CountryList/CountryList.module.css"],"names":["module","exports","useStyles","makeStyles","root","borderRadius","boxShadow","Cards","data","confirmed","recovered","deaths","lastUpdate","country","classes","className","styles","container","title","Card","cardContainer","CardContent","card","Typography","name","gutterBottom","start","end","value","duration","separator","death","date","Date","toDateString","url","fetchData","a","changeableUrl","Axios","get","image","dailySummary","modifiedData","fetchDailyData","map","reportDate","total","fetchMapData","latitude","lat","longitude","long","countryRegion","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","formatDate","day","slice","month","lineChart","width","minHeight","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","horizontal","vertical","dataKey","tickLine","stroke","tickFormatter","num","Math","abs","sign","toFixed","contentStyle","background","formatter","props","toLocaleString","charAt","toUpperCase","labelFormatter","iconType","verticalAlign","align","height","type","fillOpacity","fill","Map","zoom","viewport","setViewport","mapData","setMapData","initialMapData","mapStyle","onViewportChange","mapboxApiAccessToken","i","max","floor","random","b","c","d","colors","color","length","key","cx","cy","r","countriesName","Spain","Italy","Germany","France","China","US","Iran","Turkey","Switzerland","Belgium","Netherlands","Austria","Portugal","Brazil","Israel","Canada","Sweden","Norway","Russia","Ireland","Czechia","Chile","Denmark","Poland","Romania","Malaysia","Ecuador","India","Philippines","Pakistan","Japan","Luxembourg","Australia","Peru","Indonesia","Thailand","Finland","Serbia","Mexico","Panama","Greece","Qatar","Iceland","Colombia","Argentina","Algeria","Singapore","Ukraine","Croatia","Egypt","Estonia","Morocco","Slovenia","Iraq","Moldova","Armenia","Lithuania","Hungary","Bahrain","Cameroon","Azerbaijan","Kazakhstan","Tunisia","Belarus","Kuwait","Latvia","Bulgaria","Lebanon","Andorra","Slovakia","Cyprus","Uruguay","Albania","Afghanistan","Jordan","Uzbekistan","Cuba","Oman","Honduras","Vietnam","Nigeria","Malta","Mauritius","Senegal","Ghana","Montenegro","Niger","Georgia","Venezuela","Bolivia","Kyrgyzstan","Kosovo","Kenya","Brunei","Guinea","Cambodia","Paraguay","Rwanda","Bangladesh","Liechtenstein","Monaco","Madagascar","Guatemala","Djibouti","Jamaica","Barbados","Uganda","Mali","Togo","Ethiopia","Zambia","Eritrea","Bahamas","Guyana","Benin","Tanzania","Burma","Gabon","Haiti","Maldives","Syria","Libya","Namibia","Angola","Dominica","Mongolia","Liberia","Fiji","Grenada","Sudan","Laos","Mozambique","Seychelles","Suriname","Chad","Eswatini","Nepal","Zimbabwe","Somalia","Botswana","Mauritania","Nicaragua","Belize","Bhutan","Gambia","Malawi","Burundi","countries","confirmedCount","number","fontWeight","SearchBar","search","input","placeholder","onChange","e","target","CountryList","handleCountryChange","loading","setLoading","setData","searchValue","setSearchValue","searchData","filter","toLowerCase","indexOf","fetch","then","response","json","resultData","countriesCount","item","result","hasOwnProperty","push","sort","catch","error","console","log","listItems","ListItem","button","onClick","ListItemText","primary","list","App","state","initialData","setState","this","main","header","titleContainer","t1","t2","href","style","fontSize","midContainer","mapContainer","rightContainer","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be4592c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chart_root__3iyhC\",\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"cardContainer\":\"Cards_cardContainer__x7aVY\",\"card\":\"Cards_card__eGUfZ\",\"title\":\"Cards_title__3rXy6\",\"name\":\"Cards_name__2eT8n\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"death\":\"Cards_death__207V6\",\"date\":\"Cards_date__3RJ5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"titleContainer\":\"App_titleContainer__2PKq3\",\"t1\":\"App_t1__399Rz\",\"t2\":\"App_t2__gfKga\",\"midContainer\":\"App_midContainer__1z4xB\",\"rightContainer\":\"App_rightContainer__2HVuk\",\"mapContainer\":\"App_mapContainer__3SUeY\",\"image\":\"App_image__3byI1\"};","import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        borderRadius: 20,\n        boxShadow: `4px 4px rgba(0,0,0,0.03)`,\n    }\n}); \n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate, country }}) => {\n\n    const classes = useStyles();\n\n    if (!confirmed) {\n        return 'Loading...';\n    }\n    \n    return(\n        <div className={styles.container}>\n            {country ? (<h2 className={styles.title}>{country}</h2>) : (<h2 className={styles.title}>Global</h2>)}\n            <Card className={styles.cardContainer} classes={{root: classes.root}}>  \n                <CardContent className={styles.card}>\n                    <Typography className={styles.name} gutterBottom >Aggregared Confirmed</Typography>\n                    <Typography className={styles.confirmed}>\n                        <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card className={styles.cardContainer}  classes={{root: classes.root}}>  \n                <CardContent className={styles.card}>\n                    <Typography className={styles.name} gutterBottom >Recovered</Typography>\n                    <Typography className={styles.recovered}>\n                        <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card className={styles.cardContainer} classes={{root: classes.root}}>  \n                <CardContent className={styles.card}>\n                    <Typography className={styles.name} gutterBottom >Death</Typography>\n                    <Typography className={styles.death}>\n                        <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card className={styles.cardContainer} classes={{root: classes.root}}>  \n                <CardContent className={styles.card}>\n                    <Typography className={styles.name} gutterBottom >Last Update</Typography>\n                    <Typography className={styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default Cards;","import Axios from \"axios\";\n\nconst url = 'https://covid19.mathdro.id/api';\nconst dailyurl = 'https://covid19.mathdro.id/api/daily';\n\nconst mapurl = 'https://covid19.mathdro.id/api/confirmed';\nconst countryurl = 'https://covid19.mathdro.id/api/countries';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate, image, dailySummary} } = await Axios.get(changeableUrl);\n\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate, image, dailySummary };\n\n        return modifiedData;\n\n    } catch(error) {\n        return error;\n    }\n}\n\nexport const fetchDailyData = async() => {\n    try {\n        const { data } = await Axios.get(dailyurl);\n\n        return data.map(({confirmed, deaths, recovered, reportDate: date}) => ({confirmed: confirmed.total, recovered: recovered.total, deaths: deaths.total, date}));\n    } catch(error) {\n        return error;\n    }\n}\n\nexport const fetchMapData = async () => {\n    try {\n        const { data } = await Axios.get(mapurl);  \n\n        return data.map(({ lat: latitude, long: longitude, countryRegion: name, confirmed}) => ({ latitude, longitude, name, confirmed }));\n    } catch(error) {\n        return error;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Area, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, AreaChart  } from 'recharts';\nimport styles from './Chart.module.css';\nimport { fetchDailyData } from '../../api';\n\nconst Chart = ({data: {confirmed, recovered, deaths }, country}) => {\n\nconst [ dailyData, setDailyData ] = useState({});\n\nuseEffect(() => {\n    const fetchAPI = async () => {\n        const initialDailyData = await fetchDailyData();\n\n        setDailyData(initialDailyData);\n    }\n    \nfetchAPI();\n}, []);\n\nconst yFormatter = (num) =>  {\n    return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : Math.sign(num)*Math.abs(num)\n}\n\nconst formatDate = (value) => {\n    const months = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"Jun\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sep\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\",\n    }\n    const day = value.slice(8)\n    const month = months[value.slice(5, 7)]\n  \n    return `${month} ${day}`\n}\n\nconst lineChart = (\n    dailyData[0] ? \n    (\n    <ResponsiveContainer width='99%' minHeight={ 280 }>\n        <AreaChart\n            data={dailyData}\n            margin={{\n                top: 5,\n                right: 20,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <defs>\n                <linearGradient id=\"confirmed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#ff9478\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#ff9478\" stopOpacity={0}/>\n                </linearGradient>\n                <linearGradient id=\"deaths\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#f64747\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#f64747\" stopOpacity={0}/>\n                </linearGradient>\n            </defs>\n            <CartesianGrid horizontal={false} vertical={false} />\n            <XAxis\n                dataKey=\"date\"\n                tickLine={false}\n                stroke=\"#5d5d5d\"\n                tickFormatter={formatDate}\n            />\n            <YAxis\n                tickLine={false}\n                stroke=\"#5d5d5d\"\n                tickFormatter={yFormatter}\n            />\n            <Tooltip\n                contentStyle={{ background: \"#fefefe\" }}\n                formatter={(value, name, props) => {\n                return [\n                    value.toLocaleString(),\n                    name.charAt(0).toUpperCase() + name.slice(1),\n                ]\n                }}\n                labelFormatter={formatDate}\n            />\n            <Legend\n                iconType=\"circle\"\n                formatter={(value) => {\n                    return value.charAt(0).toUpperCase() + value.slice(1)\n                }}\n                verticalAlign=\"top\"\n                align='right'\n                height={36}\n            />\n            <Area\n                type=\"monotone\"\n                dataKey=\"confirmed\"\n                stroke=\"#ff9478\"\n                fillOpacity={0.5}\n                fill=\"#ff9478\"\n            />\n\n            <Area\n                type=\"monotone\"\n                dataKey=\"deaths\"\n                stroke=\"#f64747\"\n                fillOpacity={0.5}\n                fill=\"#f64747\"\n            />\n        </AreaChart>\n    </ResponsiveContainer>\n    ) : null\n);\n\nreturn(\n    <div className={styles.root}>\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    </div>\n)\n}\n\nexport default Chart;","import React, { useState, useEffect } from \"react\"\nimport ReactMapGL, { Marker } from \"react-map-gl\"\nimport { fetchMapData } from '../../api'\nconst TOKEN = \"pk.eyJ1Ijoid2lsbGlhbWN1aSIsImEiOiJjazk3ang3cm0xN2VqM3FteWR4Y3Z3b29jIn0.UfW5fXExA5nXpAfo8Q9qAg\"\n\n\nconst Map = ({ data }) => {\n\n  const [ viewport, setViewport ] = useState({\n    latitude: 16.636192,\n    longitude: 5.189195,\n    zoom: 0.1,\n  })\n\n  const [ mapData, setMapData ] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n        const initialMapData = await fetchMapData();\n\n        setMapData(initialMapData);\n    }\n    \n  fetchAPI();\n  }, []);\n\n  const updateViewport = (viewport) => {\n    setViewport(viewport)\n  }\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  return (\n        <ReactMapGL\n          {...viewport}\n          width='100%'\n          height='100%'\n          mapStyle=\"mapbox://styles/williamcui/ck9887l401w211ip9zx9gqt8q\"\n          onViewportChange={updateViewport}\n          mapboxApiAccessToken={TOKEN}\n        >\n          {mapData ? mapData.map((country, i) => {\n            const a = getRandomInt(20) + 4;\n            const b = a / 2;\n            const c = b - 2;\n            const d = Math.random();\n            const colors = [\"#ff9478\", '#f03434', '#f62459', '#d64541'];\n            const color = colors[Math.floor(Math.random() * colors.length)];\n            return(\n              <Marker\n                key={i}\n                latitude={country.latitude ? country.latitude : 37.78}\n                longitude={country.longitude ? country.longitude : -122.41}\n                zoom={1}>\n                  <svg width={a} height={a}>\n                    <circle cx={b} cy={b} r={c} fill={color} fillOpacity={d} />\n                  </svg>\n              </Marker>\n          )}) : null }\n        </ReactMapGL>\n  )\n}\n\nexport default Map\n","export const countriesName = {\n    Spain: 0,\n    Italy: 1,\n    Germany: 2,\n    France: 3,\n    China: 4,\n    US: 5,\n    Iran: 6,\n    \"United Kingdom\": 7,\n    Turkey: 8,\n    Switzerland: 9,\n    Belgium: 10,\n    Netherlands: 11,\n    Austria: 12,\n    Portugal: 13,\n    Brazil: 14,\n    \"Korea, South\": 15,\n    Israel: 16,\n    Canada: 17,\n    Sweden: 18,\n    Norway: 19,\n    Russia: 20,\n    Ireland: 21,\n    Czechia: 22,\n    Chile: 23,\n    Denmark: 24,\n    Poland: 25,\n    Romania: 26,\n    Malaysia: 27,\n    Ecuador: 28,\n    India: 29,\n    Philippines: 30,\n    Pakistan: 31,\n    Japan: 32,\n    Luxembourg: 33,\n    Australia: 34,\n    \"Saudi Arabia\": 35,\n    Peru: 36,\n    Indonesia: 37,\n    Thailand: 38,\n    Finland: 39,\n    Serbia: 40,\n    Mexico: 41,\n    Panama: 42,\n    \"United Arab Emirates\": 43,\n    \"Dominican Republic\": 44,\n    Greece: 45,\n    \"South Africa\": 46,\n    Qatar: 47,\n    Iceland: 48,\n    Colombia: 49,\n    Argentina: 50,\n    Algeria: 51,\n    Singapore: 52,\n    Ukraine: 53,\n    Croatia: 54,\n    Egypt: 55,\n    Estonia: 56,\n    \"New Zealand\": 57,\n    Morocco: 58,\n    Slovenia: 59,\n    Iraq: 60,\n    Moldova: 61,\n    Armenia: 62,\n    Lithuania: 63,\n    Hungary: 64,\n    \"Diamond Princess\": 65,\n    Bahrain: 66,\n    \"Bosnia and Herzegovina\": 67,\n    Cameroon: 68,\n    Azerbaijan: 69,\n    Kazakhstan: 70,\n    Tunisia: 71,\n    Belarus: 72,\n    Kuwait: 73,\n    \"North Macedonia\": 74,\n    Latvia: 75,\n    Bulgaria: 76,\n    Lebanon: 77,\n    Andorra: 78,\n    Slovakia: 79,\n    \"Costa Rica\": 80,\n    Cyprus: 81,\n    Uruguay: 82,\n    \"Taiwan*\": 83,\n    Albania: 84,\n    Afghanistan: 85,\n    \"Burkina Faso\": 86,\n    Jordan: 87,\n    Uzbekistan: 88,\n    Cuba: 89,\n    Oman: 90,\n    Honduras: 91,\n    \"San Marino\": 92,\n    \"Cote d'Ivoire\": 93,\n    Vietnam: 94,\n    \"West Bank and Gaza\": 95,\n    Nigeria: 96,\n    Malta: 97,\n    Mauritius: 98,\n    Senegal: 99,\n    Ghana: 100,\n    Montenegro: 101,\n    Niger: 102,\n    \"Sri Lanka\": 103,\n    Georgia: 104,\n    Venezuela: 105,\n    Bolivia: 106,\n    \"Congo (Kinshasa)\": 107,\n    Kyrgyzstan: 108,\n    Kosovo: 109,\n    Kenya: 110,\n    Brunei: 111,\n    Guinea: 112,\n    Cambodia: 113,\n    Paraguay: 114,\n    Rwanda: 115,\n    \"Trinidad and Tobago\": 116,\n    Bangladesh: 117,\n    Liechtenstein: 118,\n    Monaco: 119,\n    Madagascar: 120,\n    \"El Salvador\": 121,\n    Guatemala: 122,\n    Djibouti: 123,\n    Jamaica: 124,\n    Barbados: 125,\n    Uganda: 126,\n    \"Congo (Brazzaville)\": 127,\n    Mali: 128,\n    Togo: 129,\n    Ethiopia: 130,\n    Zambia: 131,\n    Eritrea: 132,\n    Bahamas: 133,\n    Guyana: 134,\n    Benin: 135,\n    Tanzania: 136,\n    Burma: 137,\n    Gabon: 138,\n    Haiti: 139,\n    Maldives: 140,\n    Syria: 141,\n    \"Guinea-Bissau\": 142,\n    Libya: 143,\n    \"Equatorial Guinea\": 144,\n    Namibia: 145,\n    \"Antigua and Barbuda\": 146,\n    Angola: 147,\n    Dominica: 148,\n    Mongolia: 149,\n    \"Saint Lucia\": 150,\n    Liberia: 151,\n    Fiji: 152,\n    Grenada: 153,\n    Sudan: 154,\n    Laos: 155,\n    Mozambique: 156,\n    \"Saint Kitts and Nevis\": 157,\n    Seychelles: 158,\n    Suriname: 159,\n    Chad: 160,\n    Eswatini: 161,\n    \"MS Zaandam\": 162,\n    Nepal: 163,\n    Zimbabwe: 164,\n    \"Central African Republic\": 165,\n    \"Cabo Verde\": 166,\n    \"Holy See\": 167,\n    \"Saint Vincent and the Grenadines\": 168,\n    Somalia: 169,\n    Botswana: 170,\n    Mauritania: 171,\n    Nicaragua: 172,\n    \"Sierra Leone\": 173,\n    Belize: 174,\n    Bhutan: 175,\n    Gambia: 176,\n    Malawi: 177,\n    \"Western Sahara\": 178,\n    Burundi: 179,\n    \"Papua New Guinea\": 180,\n    \"South Sudan\": 181,\n    \"Timor-Leste\": 182,\n  }\n\n  export const countries = [\n    { country: \"Spain\", confirmedCount: 0 },\n    { country: \"Italy\", confirmedCount: 0 },\n    { country: \"Germany\", confirmedCount: 0 },\n    { country: \"France\", confirmedCount: 0 },\n    { country: \"China\", confirmedCount: 0 },\n    { country: \"US\", confirmedCount: 0 },\n    { country: \"Iran\", confirmedCount: 0 },\n    { country: \"United Kingdom\", confirmedCount: 0 },\n    { country: \"Turkey\", confirmedCount: 0 },\n    { country: \"Switzerland\", confirmedCount: 0 },\n    { country: \"Belgium\", confirmedCount: 0 },\n    { country: \"Netherlands\", confirmedCount: 0 },\n    { country: \"Austria\", confirmedCount: 0 },\n    { country: \"Portugal\", confirmedCount: 0 },\n    { country: \"Brazil\", confirmedCount: 0 },\n    { country: \"Korea, South\", confirmedCount: 0 },\n    { country: \"Israel\", confirmedCount: 0 },\n    { country: \"Canada\", confirmedCount: 0 },\n    { country: \"Sweden\", confirmedCount: 0 },\n    { country: \"Norway\", confirmedCount: 0 },\n    { country: \"Russia\", confirmedCount: 0 },\n    { country: \"Ireland\", confirmedCount: 0 },\n    { country: \"Czechia\", confirmedCount: 0 },\n    { country: \"Chile\", confirmedCount: 0 },\n    { country: \"Denmark\", confirmedCount: 0 },\n    { country: \"Poland\", confirmedCount: 0 },\n    { country: \"Romania\", confirmedCount: 0 },\n    { country: \"Malaysia\", confirmedCount: 0 },\n    { country: \"Ecuador\", confirmedCount: 0 },\n    { country: \"India\", confirmedCount: 0 },\n    { country: \"Philippines\", confirmedCount: 0 },\n    { country: \"Pakistan\", confirmedCount: 0 },\n    { country: \"Japan\", confirmedCount: 0 },\n    { country: \"Luxembourg\", confirmedCount: 0 },\n    { country: \"Australia\", confirmedCount: 0 },\n    { country: \"Saudi Arabia\", confirmedCount: 0 },\n    { country: \"Peru\", confirmedCount: 0 },\n    { country: \"Indonesia\", confirmedCount: 0 },\n    { country: \"Thailand\", confirmedCount: 0 },\n    { country: \"Finland\", confirmedCount: 0 },\n    { country: \"Serbia\", confirmedCount: 0 },\n    { country: \"Mexico\", confirmedCount: 0 },\n    { country: \"Panama\", confirmedCount: 0 },\n    { country: \"United Arab Emirates\", confirmedCount: 0 },\n    { country: \"Dominican Republic\", confirmedCount: 0 },\n    { country: \"Greece\", confirmedCount: 0 },\n    { country: \"South Africa\", confirmedCount: 0 },\n    { country: \"Qatar\", confirmedCount: 0 },\n    { country: \"Iceland\", confirmedCount: 0 },\n    { country: \"Colombia\", confirmedCount: 0 },\n    { country: \"Argentina\", confirmedCount: 0 },\n    { country: \"Algeria\", confirmedCount: 0 },\n    { country: \"Singapore\", confirmedCount: 0 },\n    { country: \"Ukraine\", confirmedCount: 0 },\n    { country: \"Croatia\", confirmedCount: 0 },\n    { country: \"Egypt\", confirmedCount: 0 },\n    { country: \"Estonia\", confirmedCount: 0 },\n    { country: \"New Zealand\", confirmedCount: 0 },\n    { country: \"Morocco\", confirmedCount: 0 },\n    { country: \"Slovenia\", confirmedCount: 0 },\n    { country: \"Iraq\", confirmedCount: 0 },\n    { country: \"Moldova\", confirmedCount: 0 },\n    { country: \"Armenia\", confirmedCount: 0 },\n    { country: \"Lithuania\", confirmedCount: 0 },\n    { country: \"Hungary\", confirmedCount: 0 },\n    { country: \"Diamond Princess\", confirmedCount: 0 },\n    { country: \"Bahrain\", confirmedCount: 0 },\n    { country: \"Bosnia and Herzegovina\", confirmedCount: 0 },\n    { country: \"Cameroon\", confirmedCount: 0 },\n    { country: \"Azerbaijan\", confirmedCount: 0 },\n    { country: \"Kazakhstan\", confirmedCount: 0 },\n    { country: \"Tunisia\", confirmedCount: 0 },\n    { country: \"Belarus\", confirmedCount: 0 },\n    { country: \"Kuwait\", confirmedCount: 0 },\n    { country: \"North Macedonia\", confirmedCount: 0 },\n    { country: \"Latvia\", confirmedCount: 0 },\n    { country: \"Bulgaria\", confirmedCount: 0 },\n    { country: \"Lebanon\", confirmedCount: 0 },\n    { country: \"Andorra\", confirmedCount: 0 },\n    { country: \"Slovakia\", confirmedCount: 0 },\n    { country: \"Costa Rica\", confirmedCount: 0 },\n    { country: \"Cyprus\", confirmedCount: 0 },\n    { country: \"Uruguay\", confirmedCount: 0 },\n    { country: \"Taiwan*\", confirmedCount: 0 },\n    { country: \"Albania\", confirmedCount: 0 },\n    { country: \"Afghanistan\", confirmedCount: 0 },\n    { country: \"Burkina Faso\", confirmedCount: 0 },\n    { country: \"Jordan\", confirmedCount: 0 },\n    { country: \"Uzbekistan\", confirmedCount: 0 },\n    { country: \"Cuba\", confirmedCount: 0 },\n    { country: \"Oman\", confirmedCount: 0 },\n    { country: \"Honduras\", confirmedCount: 0 },\n    { country: \"San Marino\", confirmedCount: 0 },\n    { country: \"Cote d'Ivoire\", confirmedCount: 0 },\n    { country: \"Vietnam\", confirmedCount: 0 },\n    { country: \"West Bank and Gaza\", confirmedCount: 0 },\n    { country: \"Nigeria\", confirmedCount: 0 },\n    { country: \"Malta\", confirmedCount: 0 },\n    { country: \"Mauritius\", confirmedCount: 0 },\n    { country: \"Senegal\", confirmedCount: 0 },\n    { country: \"Ghana\", confirmedCount: 0 },\n    { country: \"Montenegro\", confirmedCount: 0 },\n    { country: \"Niger\", confirmedCount: 0 },\n    { country: \"Sri Lanka\", confirmedCount: 0 },\n    { country: \"Georgia\", confirmedCount: 0 },\n    { country: \"Venezuela\", confirmedCount: 0 },\n    { country: \"Bolivia\", confirmedCount: 0 },\n    { country: \"Congo (Kinshasa)\", confirmedCount: 0 },\n    { country: \"Kyrgyzstan\", confirmedCount: 0 },\n    { country: \"Kosovo\", confirmedCount: 0 },\n    { country: \"Kenya\", confirmedCount: 0 },\n    { country: \"Brunei\", confirmedCount: 0 },\n    { country: \"Guinea\", confirmedCount: 0 },\n    { country: \"Cambodia\", confirmedCount: 0 },\n    { country: \"Paraguay\", confirmedCount: 0 },\n    { country: \"Rwanda\", confirmedCount: 0 },\n    { country: \"Trinidad and Tobago\", confirmedCount: 0 },\n    { country: \"Bangladesh\", confirmedCount: 0 },\n    { country: \"Liechtenstein\", confirmedCount: 0 },\n    { country: \"Monaco\", confirmedCount: 0 },\n    { country: \"Madagascar\", confirmedCount: 0 },\n    { country: \"El Salvador\", confirmedCount: 0 },\n    { country: \"Guatemala\", confirmedCount: 0 },\n    { country: \"Djibouti\", confirmedCount: 0 },\n    { country: \"Jamaica\", confirmedCount: 0 },\n    { country: \"Barbados\", confirmedCount: 0 },\n    { country: \"Uganda\", confirmedCount: 0 },\n    { country: \"Congo (Brazzaville)\", confirmedCount: 0 },\n    { country: \"Mali\", confirmedCount: 0 },\n    { country: \"Togo\", confirmedCount: 0 },\n    { country: \"Ethiopia\", confirmedCount: 0 },\n    { country: \"Zambia\", confirmedCount: 0 },\n    { country: \"Eritrea\", confirmedCount: 0 },\n    { country: \"Bahamas\", confirmedCount: 0 },\n    { country: \"Guyana\", confirmedCount: 0 },\n    { country: \"Benin\", confirmedCount: 0 },\n    { country: \"Tanzania\", confirmedCount: 0 },\n    { country: \"Burma\", confirmedCount: 0 },\n    { country: \"Gabon\", confirmedCount: 0 },\n    { country: \"Haiti\", confirmedCount: 0 },\n    { country: \"Maldives\", confirmedCount: 0 },\n    { country: \"Syria\", confirmedCount: 0 },\n    { country: \"Guinea-Bissau\", confirmedCount: 0 },\n    { country: \"Libya\", confirmedCount: 0 },\n    { country: \"Equatorial Guinea\", confirmedCount: 0 },\n    { country: \"Namibia\", confirmedCount: 0 },\n    { country: \"Antigua and Barbuda\", confirmedCount: 0 },\n    { country: \"Angola\", confirmedCount: 0 },\n    { country: \"Dominica\", confirmedCount: 0 },\n    { country: \"Mongolia\", confirmedCount: 0 },\n    { country: \"Saint Lucia\", confirmedCount: 0 },\n    { country: \"Liberia\", confirmedCount: 0 },\n    { country: \"Fiji\", confirmedCount: 0 },\n    { country: \"Grenada\", confirmedCount: 0 },\n    { country: \"Sudan\", confirmedCount: 0 },\n    { country: \"Laos\", confirmedCount: 0 },\n    { country: \"Mozambique\", confirmedCount: 0 },\n    { country: \"Saint Kitts and Nevis\", confirmedCount: 0 },\n    { country: \"Seychelles\", confirmedCount: 0 },\n    { country: \"Suriname\", confirmedCount: 0 },\n    { country: \"Chad\", confirmedCount: 0 },\n    { country: \"Eswatini\", confirmedCount: 0 },\n    { country: \"MS Zaandam\", confirmedCount: 0 },\n    { country: \"Nepal\", confirmedCount: 0 },\n    { country: \"Zimbabwe\", confirmedCount: 0 },\n    { country: \"Central African Republic\", confirmedCount: 0 },\n    { country: \"Cabo Verde\", confirmedCount: 0 },\n    { country: \"Holy See\", confirmedCount: 0 },\n    { country: \"Saint Vincent and the Grenadines\", confirmedCount: 0 },\n    { country: \"Somalia\", confirmedCount: 0 },\n    { country: \"Botswana\", confirmedCount: 0 },\n    { country: \"Mauritania\", confirmedCount: 0 },\n    { country: \"Nicaragua\", confirmedCount: 0 },\n    { country: \"Sierra Leone\", confirmedCount: 0 },\n    { country: \"Belize\", confirmedCount: 0 },\n    { country: \"Bhutan\", confirmedCount: 0 },\n    { country: \"Gambia\", confirmedCount: 0 },\n    { country: \"Malawi\", confirmedCount: 0 },\n    { country: \"Western Sahara\", confirmedCount: 0 },\n    { country: \"Burundi\", confirmedCount: 0 },\n    { country: \"Papua New Guinea\", confirmedCount: 0 },\n    { country: \"South Sudan\", confirmedCount: 0 },\n    { country: \"Timor-Leste\", confirmedCount: 0 },\n  ]","import React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ListItem, ListItemText } from '@material-ui/core';\nimport styles from './CountryList.module.css';\nimport ReactLoading from 'react-loading';\nimport { countriesName, countries } from '../../utils/countries';\n\nconst useStyles = makeStyles({\n    number: {\n        fontWeight: 500,\n        color: '#5d5d5d',\n    },\n    name: {\n        color: '#95a5a6',\n    },\n  });\n\nconst SearchBar = (props) => {\n    return (\n        <div className={styles.search}>\n          <SearchIcon color=\"disabled\"/>\n          <input\n            type=\"text\"\n            className={styles.input}\n            placeholder=\"Search Country\"\n            onChange={(e) => props.onChange(e.target.value)}\n          />\n        </div>\n    )\n  }\n\nconst CountryList = ({ handleCountryChange }) => {\n    const classes = useStyles();\n    const [ loading, setLoading ] = useState(true)\n    const [ data, setData ] = useState([]);\n    const [ searchValue, setSearchValue ] = useState(\"\");\n\n    let searchData = data.filter((country) => {\n        return (\n          country.country.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\n        )\n      })\n\n    useEffect(() => {\n        fetch(`https://covid19.mathdro.id/api/confirmed`)\n          .then((response) => response.json())\n          .then((resultData) => {\n            let countriesCount = countries.map((item) => {\n              return { ...item }\n            })\n\n            for (let result of resultData) {\n              if (countriesName.hasOwnProperty(result.countryRegion)) {\n                countriesCount[\n                    countriesName[result.countryRegion]\n                ].confirmedCount += result.confirmed\n              } else {\n                countriesCount.push({\n                  country: result.countryRegion,\n                  confirmedCount: result.confirmed,\n                })\n              }\n            }\n            countriesCount.sort((a, b) => b.confirmedCount - a.confirmedCount);\n            setData(countriesCount)\n            setLoading(false)\n          })\n          .catch((error) => console.log(error))\n    }, [])\n    \n\n    const listItems = searchData.map((data, i) => {\n\n        const number = data.confirmedCount.toLocaleString();\n\n        return (\n            <ListItem key={i} button onClick={(e) => handleCountryChange(data.country)}>\n                <ListItemText primary={number} classes={{primary: classes.number}}/>\n                <ListItemText primary={data.country} classes={{primary: classes.name}}/>\n            </ListItem>\n        )\n    })\n\n    return(\n        <div className={styles.container}>\n            <SearchBar onChange={setSearchValue} />\n            <div className={styles.list}>\n                { loading ? \n                <ReactLoading type='bubbles' color={'#eee'} height={300} width={200} /> \n                : listItems }\n            </div>\n        </div>\n    )\n}\n\nexport default CountryList;","import React from 'react';\nimport { Cards, Chart, Map, CountryList } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountries } from './api/';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    initialData: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data: data });\n    this.setState({ initialData : data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({data, country: country});\n  }\n\n  render() {\n\n    const { data, country, initialData } = this.state;\n\n    return (\n      <div className={styles.main}>\n        <header className={styles.header}>\n          <div className={styles.titleContainer}>\n            <h1 className={styles.t1}>COVID-19</h1>\n            <h1 className={styles.t2}>Global Trend Dashboard by William Cui ©</h1>\n          </div>\n          <a href=\"https://github.com/wenweicui/react-covid-19\"><GitHubIcon color=\"disabled\" style={{ fontSize: 40 }}/></a>\n        </header>\n        <div className={styles.container}>\n          <CountryList handleCountryChange={this.handleCountryChange} />\n          <div className={styles.midContainer}>\n            <div className={styles.mapContainer}><Map data={initialData} /></div>\n            <Chart data={data} country={country} />\n          </div>\n          <div className={styles.rightContainer}>\n            <Cards data={data} country={country}/>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryList_container__2mVXX\",\"list\":\"CountryList_list__1zkAi\",\"search\":\"CountryList_search__3pksr\",\"input\":\"CountryList_input__3pDwi\"};"],"sourceRoot":""}